[package]
name = "axum_sqlx_sessions"
version = "0.2.0"
authors = ["Andrew Wheeler <genusistimelord@gmail.com>"]
description = "Library to Provide a SQLx Database Session management layer. You must also include Tower_cookies in order to use this Library."
edition = "2021"
license = "MIT"
readme = "README.md"
documentation = "https://docs.rs/axum_sqlx_sessions"
keywords = ["Axum", "Tower", "SQLx", "Session"]
repository = "https://github.com/AscendingCreations/AxumSqlxSessions"

[package.metadata.docs.rs]
features = ["postgres", "sqlite", "mysql"]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["postgres"]
sqlite = ["sqlx/sqlite"]
postgres = ["sqlx/postgres"]
mysql = ["sqlx/mysql"]

[dependencies]
axum = "0.4"
serde = "1.0"
serde_json = "1.0"
chrono = { version = "0.4", features = ["clock", "serde", "std"] }
tokio = { version = "1", features = ["full"] }
futures = "0.3"
async-trait = "0.1.51"
tracing = "0.1"
http-body = "0.4"
uuid = { version = "0.8", features = ["v4", "serde"] }
rand = "0.8"
http = "0.2"
parking_lot = "0.11"
pin-project-lite = "0.2"
tower-http = { version = "0.2", features = ["full"] }
tower-layer = "0.3"
tower-service = "0.3"
tower-cookies = "0.4"
sqlx = { git = "https://github.com/genusistimelord/sqlx.git", branch = "AnyConnectionKindPublic", features = [
    "runtime-tokio-rustls",
    "chrono",
    "json",
    "any",
    "all-types",
] }
thiserror = "1.0"
either = "1.6.1"
futures-channel = { version = "0.3.19", default-features = false, features = [
    "sink",
    "alloc",
    "std",
] }
futures-core = { version = "0.3.19", default-features = false }
futures-intrusive = "0.4.0"
futures-util = { version = "0.3", default-features = false, features = [
    "alloc",
    "sink",
] }
# used by the SQLite worker thread to block on the async mutex that locks the database handle
futures-executor = { version = "0.3.19", optional = true }
